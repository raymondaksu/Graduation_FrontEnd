[{"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\index.js":"1","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\Landing.js":"2","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\context\\Context.js":"3","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\utils\\Utils.js":"4","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\SignIn.js":"5","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\SignUp.js":"6","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\reportWebVitals.js":"7","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\router\\Router.js":"8","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\Home.js":"9","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\navbar\\Navbar.js":"10","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\navbar\\NavbarMenuList.js":"11","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\About.js":"12","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\Contact.js":"13","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\card\\Card.js":"14","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\profile\\Profile.js":"15","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\searchbox\\SearchBox.js":"16","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\searchbox\\SearchBoxStyle.js":"17","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\categorydropdown\\CategoryDropDown.js":"18","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\stats\\Stats.js":"19","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\stories\\Stories.js":"20","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\detail\\Detail.js":"21","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\router\\PrivateRouter.js":"22","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\PasswordReset.js":"23","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\PasswordResetConfirm.js":"24","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\editProfile\\EditModal.js":"25","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\editComment\\EditComment.js":"26","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\AccountSettings.js":"27","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\userDetail\\userDetail.js":"28","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\userDetail\\userStats.js":"29","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\userDetail\\Chat.js":"30","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\config\\index.js":"31","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\services\\WebSocket.js":"32","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\PostEdit.js":"33","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\DeleteAccount.js":"34","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\smallElements.js":"35","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\titles.js":"36","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\DeletePost.js":"37","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\modals.js":"38","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\ChangeCredentials.js":"39","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\CreatePost.js":"40","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\signInUp.js":"41","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\DeleteComment.js":"42","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\ChangePassword.js":"43"},{"size":533,"mtime":1614596674865,"results":"44","hashOfConfig":"45"},{"size":1613,"mtime":1615576173157,"results":"46","hashOfConfig":"45"},{"size":1150,"mtime":1615564172966,"results":"47","hashOfConfig":"45"},{"size":854,"mtime":1615832436101,"results":"48","hashOfConfig":"45"},{"size":4022,"mtime":1615584882997,"results":"49","hashOfConfig":"45"},{"size":5299,"mtime":1615584561995,"results":"50","hashOfConfig":"45"},{"size":362,"mtime":1606301650019,"results":"51","hashOfConfig":"45"},{"size":1709,"mtime":1614601767839,"results":"52","hashOfConfig":"45"},{"size":7960,"mtime":1616617923295,"results":"53","hashOfConfig":"45"},{"size":4222,"mtime":1615832436101,"results":"54","hashOfConfig":"45"},{"size":3585,"mtime":1613920049705,"results":"55","hashOfConfig":"45"},{"size":616,"mtime":1614516221335,"results":"56","hashOfConfig":"45"},{"size":216,"mtime":1613920049788,"results":"57","hashOfConfig":"45"},{"size":4656,"mtime":1613920049682,"results":"58","hashOfConfig":"45"},{"size":7499,"mtime":1615832436102,"results":"59","hashOfConfig":"45"},{"size":881,"mtime":1613920049762,"results":"60","hashOfConfig":"45"},{"size":1285,"mtime":1613431057499,"results":"61","hashOfConfig":"45"},{"size":1546,"mtime":1615832436101,"results":"62","hashOfConfig":"45"},{"size":4303,"mtime":1615573775705,"results":"63","hashOfConfig":"45"},{"size":5148,"mtime":1615832436105,"results":"64","hashOfConfig":"45"},{"size":20896,"mtime":1616017004011,"results":"65","hashOfConfig":"45"},{"size":525,"mtime":1613920049891,"results":"66","hashOfConfig":"45"},{"size":2566,"mtime":1615832436101,"results":"67","hashOfConfig":"45"},{"size":5671,"mtime":1615832436102,"results":"68","hashOfConfig":"45"},{"size":4033,"mtime":1616016339778,"results":"69","hashOfConfig":"45"},{"size":4665,"mtime":1615832436102,"results":"70","hashOfConfig":"45"},{"size":7078,"mtime":1615832436101,"results":"71","hashOfConfig":"45"},{"size":7224,"mtime":1615832436102,"results":"72","hashOfConfig":"45"},{"size":4214,"mtime":1615832436102,"results":"73","hashOfConfig":"45"},{"size":7104,"mtime":1615573463863,"results":"74","hashOfConfig":"45"},{"size":101,"mtime":1615837412253,"results":"75","hashOfConfig":"45"},{"size":2629,"mtime":1615564605099,"results":"76","hashOfConfig":"45"},{"size":8345,"mtime":1616264426073,"results":"77","hashOfConfig":"45"},{"size":4331,"mtime":1615832436101,"results":"78","hashOfConfig":"45"},{"size":1411,"mtime":1615581182550,"results":"79","hashOfConfig":"45"},{"size":351,"mtime":1615583395842,"results":"80","hashOfConfig":"45"},{"size":2368,"mtime":1615832436101,"results":"81","hashOfConfig":"45"},{"size":932,"mtime":1615576722524,"results":"82","hashOfConfig":"45"},{"size":7510,"mtime":1616016274911,"results":"83","hashOfConfig":"45"},{"size":7486,"mtime":1615583630344,"results":"84","hashOfConfig":"45"},{"size":1580,"mtime":1615581088038,"results":"85","hashOfConfig":"45"},{"size":2352,"mtime":1615832436101,"results":"86","hashOfConfig":"45"},{"size":7158,"mtime":1615832436101,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"wx278c",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"95"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\index.js",[],["190","191"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\Landing.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\context\\Context.js",[],["192","193"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\utils\\Utils.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\SignIn.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\SignUp.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\reportWebVitals.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\router\\Router.js",[],["194","195"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\Home.js",["196","197","198","199"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\navbar\\Navbar.js",["200"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nimport MenuListComposition from \"./NavbarMenuList\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n    \"& .MuiToolbar-gutters\": {\r\n      paddingLeft: 5,\r\n      paddingRight: 20,\r\n    },\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\n// -------------MAIN FUNCTION-------------\r\nexport default function Navbar() {\r\n  const history = useHistory();\r\n  const {\r\n    token,\r\n    setToken,\r\n    setKeyword,\r\n    setSelectedOption,\r\n    categoryDisplay,\r\n    setStoriesOpen,\r\n    setUserId,\r\n  } = useContext(Context);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleProfileOpen = () => {\r\n    history.push(\"/profile\");\r\n    setStoriesOpen(false);\r\n  };\r\n\r\n  const handleMainPage = () => {\r\n    const resetSearchSettings = () => {\r\n      setKeyword(\"\");\r\n      setSelectedOption(categoryDisplay.map((e) => e.value));\r\n    };\r\n    resetSearchSettings();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"username\");\r\n    setToken(null);\r\n    setUserId(null);\r\n    alert(\"You successfully logged out.\");\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const fetchUserProfile = async (\r\n    profilePath = `https://fs-blogapp-django.herokuapp.com/user/profile/`\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(profilePath, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token ? \"Token \" + token : null,\r\n        },\r\n      });\r\n      setImage(result?.data?.image);\r\n      console.log(\"Profile info fetched\");\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(\"No data\");\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar style={{ backgroundColor: \"#719fb0\" }}>\r\n          <MenuListComposition />\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h5\"\r\n            onClick={handleMainPage}\r\n            noWrap\r\n          >\r\n            Blog\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {token ? (\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <Avatar\r\n                    alt=\"User Avatar\"\r\n                    src={image}\r\n                    className={classes.small}\r\n                  />\r\n                </IconButton>\r\n                <Button onClick={handleLogout} color=\"inherit\">\r\n                  <ExitToAppIcon fontSize=\"large\" />\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button onClick={() => history.push(\"/\")} color=\"inherit\">\r\n                  Login\r\n                </Button>\r\n                <Button onClick={() => history.push(\"/\")} color=\"inherit\">\r\n                  Register\r\n                </Button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\navbar\\NavbarMenuList.js",[],["201","202"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\About.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\Contact.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\card\\Card.js",["203","204"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport moment from \"moment\";\r\nimport LinesEllipsis from \"react-lines-ellipsis\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 355,\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    backgroundColor: \"#351f39\",\r\n    color: \"#a0c1b8\",\r\n    borderRadius: \"26px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  headerTitle: {\r\n    fontSize: \"1.3rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  Subheader: {\r\n    color: \"white\",\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: 400,\r\n  },\r\n  timeContent: {\r\n    textAlign: \"right\",\r\n    margin: 0,\r\n    fontStyle: \"italic\",\r\n  },\r\n  timeRoot: {\r\n    paddingTop: 5,\r\n  },\r\n  contentRoot: {\r\n    padding: 5,\r\n    paddingLeft: 15,\r\n  },\r\n}));\r\n\r\n//--------inline styles----------------\r\nconst statusStyle = {\r\n  height: \"1.2rem\",\r\n  lineHeight: \"1.2rem\",\r\n  textAlign: \"center\",\r\n  backgroundColor: \"#44bd32\",\r\n  color: \"#fff\",\r\n  borderRadius: \"9px\",\r\n  width: \"8rem\",\r\n  fontSize: \"0.7rem\",\r\n  margin: \"0.3rem\",\r\n  marginBottom: \"0.7rem\",\r\n};\r\n\r\nconst iconContainer = {\r\n  margin: \"5px auto\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  borderTop: \"1px solid rgba(220, 221, 225, 0.2)\",\r\n};\r\n\r\nconst iconStyle = {\r\n  fill: \"white\",\r\n  marginRight: 5,\r\n  color: \"#fff\",\r\n};\r\n\r\n//---------------MAIN FUNCTION-------------------\r\nexport default function PostCard({ item, itemStatus, id }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      onClick={() => history.push(`/detail/${item.slug}`)}\r\n    >\r\n      <CardHeader\r\n        classes={{\r\n          title: classes.headerTitle,\r\n        }}\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            <Avatar alt=\"Avatar\" src={item.author_avatar} />\r\n          </Avatar>\r\n        }\r\n        title={item.title}\r\n      />\r\n      <CardMedia className={classes.media} image={item.image_URL} />\r\n      <CardHeader\r\n        subheader={moment(item.publish_date).format(\"MMMM Do YYYY, h:mm\")}\r\n        classes={{\r\n          subheader: classes.Subheader,\r\n          content: classes.timeContent,\r\n          root: classes.timeRoot,\r\n        }}\r\n      />\r\n      <CardContent classes={{ root: classes.contentRoot }}>\r\n        <LinesEllipsis\r\n          text={item.content}\r\n          maxLine=\"3\"\r\n          ellipsis=\"...\"\r\n          trimRight\r\n          basedOn=\"letters\"\r\n        />\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <div style={iconContainer}>\r\n          <IconButton aria-label=\"add to favorites\">\r\n            <FavoriteIcon style={iconStyle} />\r\n            <span style={{ ...iconStyle, fontSize: \"1rem\" }}>\r\n              {item.like_count}\r\n            </span>\r\n          </IconButton>\r\n          <IconButton aria-label=\"page visited\">\r\n            <VisibilityIcon style={iconStyle} />\r\n            <span style={{ ...iconStyle, fontSize: \"1rem\" }}>\r\n              {item.view_count}\r\n            </span>\r\n          </IconButton>\r\n          <IconButton aria-label=\"comment count\">\r\n            <ChatBubbleIcon style={iconStyle} />\r\n            <span style={{ ...iconStyle, fontSize: \"1rem\" }}>\r\n              {item.comment_count}\r\n            </span>\r\n          </IconButton>\r\n        </div>\r\n      </CardActions>\r\n      {itemStatus == false ? null : item.status == \"published\" ? (\r\n        <CardContent\r\n          classes={{ root: classes.contentRoot }}\r\n          style={{ padding: \"0 0 5px 15px\" }}\r\n        >\r\n          <p style={statusStyle}>Status: Published</p>\r\n        </CardContent>\r\n      ) : (\r\n        <CardContent\r\n          classes={{ root: classes.contentRoot }}\r\n          style={{ padding: \"0 0 5px 15px\" }}\r\n        >\r\n          <p style={{ ...statusStyle, backgroundColor: \"#e1b12c\" }}>\r\n            Status: Draft\r\n          </p>\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n}","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\profile\\Profile.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\searchbox\\SearchBox.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\searchbox\\SearchBoxStyle.js",[],["205","206"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\categorydropdown\\CategoryDropDown.js",["207"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../../context/Context\";\r\nimport Select from \"react-select\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const CategoryDropDown = ({ setSelectedOption }) => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const { categoryDisplay, setCategoryDisplay } = useContext(Context);\r\n\r\n  // --------fetch category list------------\r\n  const fetchData = async (\r\n    postListURL = \"https://fs-blogapp-django.herokuapp.com/api/category-list/\"\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(postListURL);\r\n      const data = result?.data;\r\n      setCategories(data);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(\"No data\");\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function selectedFunc(e) {\r\n    return setSelectedOption(e.map((x) => x.value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCategoryDisplay(\r\n      categories.map((item) => {\r\n        return {\r\n          value: item.name,\r\n          label: item.name.charAt(0).toUpperCase() + item.name.slice(1),\r\n        };\r\n      })\r\n    );\r\n  }, [categories]);\r\n\r\n  return (\r\n    <div style={{ minWidth: \"250px\" }}>\r\n      <Select\r\n        isMulti\r\n        name=\"categories\"\r\n        options={categoryDisplay}\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n        onChange={(e) => {\r\n          selectedFunc(e);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\stats\\Stats.js",["208","209","210","211"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\stories\\Stories.js",["212","213","214","215","216"],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { wideButtonStyle } from \"../../styles/smallElements\";\r\n\r\nimport PostCard from \"../card/Card\";\r\n\r\nimport { LoopCircleLoading } from \"react-loadingg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& > *\": {\r\n      margin: theme.spacing(5),\r\n    },\r\n    minHeight: \"70vh\",\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n//-------------Inline Style-------------------\r\nconst h3Style = {\r\n  width: \"80%\",\r\n  backgroundColor: \"#a0c1b8\",\r\n  padding: \"10px\",\r\n  borderRadius: \"2rem\",\r\n  textAlign: \"center\",\r\n  margin: \"0.5rem auto\",\r\n};\r\n\r\nconst noArticlesStyle = {\r\n  textAlign: \"center\",\r\n  color: \"#c0392b\",\r\n  fontWeight: \"bold\",\r\n  margin: \"4rem auto\",\r\n};\r\n\r\n//-------------MAIN FUNCTION-------------------\r\nconst Stories = () => {\r\n  const { setStoriesOpen } = useContext(Context);\r\n\r\n  const [postList, setPostList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n  const [published, setPublished] = useState([]);\r\n  const [draft, setDraft] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  //----------Fetch Post List Data------------\r\n  const fetchPostData = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const result = await axios.get(\r\n        `https://fs-blogapp-django.herokuapp.com/api/post-list/`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token ? \"Token \" + token : null,\r\n          },\r\n        }\r\n      );\r\n      setPostList(result.data);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(\"No data\");\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //-------------Filter User Posts----------------\r\n  const filteredPosts = () => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const filteredData = postList.filter((item) => {\r\n      return item.author == userId;\r\n    });\r\n    setFilteredList(filteredData);\r\n  };\r\n\r\n  //--------------Filtered List Logical Operations----------\r\n  const separateOperation = () => {\r\n    let publishedItems = [];\r\n    let draftItems = [];\r\n    const seperatePosts = () => {\r\n      filteredList.filter((item) => {\r\n        if (item.status == \"published\") {\r\n          publishedItems.push(item);\r\n        } else {\r\n          draftItems.push(item);\r\n        }\r\n      });\r\n    };\r\n\r\n    seperatePosts();\r\n    setPublished(publishedItems);\r\n    setDraft(draftItems);\r\n  };\r\n\r\n  //-----------useEffects----------\r\n  useEffect(() => {\r\n    fetchPostData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filteredPosts();\r\n  }, [postList]);\r\n\r\n  useEffect(() => {\r\n    separateOperation();\r\n  }, [filteredList]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", margin: \"4rem auto\" }}>Stories</h1>\r\n      {!postList?.length ? (\r\n        <div>\r\n          <LoopCircleLoading />\r\n        </div>\r\n      ) : !filteredList?.length ? (\r\n        <div>\r\n          <p style={noArticlesStyle}>You have no articles yet.</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h3 style={h3Style}>Published</h3>\r\n          {published.length ? (\r\n            <Grid\r\n              container\r\n              className={classes.root}\r\n              spacing={5}\r\n              justify=\"center\"\r\n            >\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={5}>\r\n                  {published.map((item, id) => {\r\n                    return <PostCard item={item} itemStatus={true} />;\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <div style={noArticlesStyle}>\r\n              <p>You have no published articles yet 😕 </p>\r\n            </div>\r\n          )}\r\n          <h3 style={h3Style}>Draft</h3>\r\n          {draft.length ? (\r\n            <Grid\r\n              container\r\n              className={classes.root}\r\n              spacing={5}\r\n              justify=\"center\"\r\n            >\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={5}>\r\n                  {draft.map((item, id) => {\r\n                    return <PostCard item={item} itemStatus={true} id={id} />;\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <div style={noArticlesStyle}>\r\n              <p>You have no draft articles.</p>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <button\r\n          onClick={() => setStoriesOpen(false)}\r\n          style={{ ...wideButtonStyle, width: \"16rem\" }}\r\n        >\r\n          Back to Profile Page\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stories;\r\n","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\detail\\Detail.js",["217","218","219","220","221","222","223","224","225"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { squareButtonStyle } from \"../../styles/smallElements\";\r\nimport { squareButtonsContainerStyle } from \"../../styles/smallElements\";\r\nimport { wideButtonStyle } from \"../../styles/smallElements\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport DeleteForever from \"@material-ui/icons/DeleteForever\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport EditComment from \"../../components/editComment/EditComment\";\r\nimport DeleteComment from \"../../components/DeleteComment\";\r\nimport DeletePost from \"../../components/DeletePost\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"300px\",\r\n    maxWidth: \"60vw\",\r\n    margin: \"20px auto\",\r\n    pointerEvents: \"none\",\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  title: {\r\n    color: \"tomato\",\r\n    textAlign: \"center\",\r\n    fontSize: \"1.8rem\",\r\n    fontWeight: \"bold\",\r\n    margin: \"1.6rem auto\",\r\n  },\r\n  module: {\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"1.5rem\",\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    padding: 3,\r\n    pointerEvents: \"all\",\r\n  },\r\n  avatar: {\r\n    marginBottom: \"0.35em\",\r\n  },\r\n  small: {\r\n    pointerEvents: \"all\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\n//--------------MAIN FUNCTION-----------\r\nconst Detail = () => {\r\n  const { userId, setUserId } = useContext(Context);\r\n  const commentRef = useRef(\"\");\r\n  let { slug } = useParams();\r\n  const [item, setItem] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [deleteComment, setDeleteComment] = useState(false);\r\n  const [deletePost, setDeletePost] = useState(false);\r\n  const [editComment, setEditComment] = useState(false);\r\n  const [editCommentContent, setEditCommentContent] = useState([]);\r\n  const [changedContent, setChangedContent] = useState(\"\");\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  // --------fetch data------------\r\n  const fetchData = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const result = await axios.get(\r\n        `https://fs-blogapp-django.herokuapp.com/api/${slug}/post-detail/`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token ? \"Token \" + token : null,\r\n          },\r\n        }\r\n      );\r\n      setItem(result.data);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(\"No data\");\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n  //----------------Destruction----------------\r\n  const {\r\n    title,\r\n    content,\r\n    image_URL,\r\n    category,\r\n    publish_date,\r\n    update_date,\r\n    author,\r\n    author_name,\r\n    author_avatar,\r\n    status,\r\n    is_liked,\r\n    comment_count,\r\n    like_count,\r\n    view_count,\r\n    comments,\r\n  } = item;\r\n\r\n  const handleLikeClick = async () => {\r\n    try {\r\n      await axios.post(\r\n        `https://fs-blogapp-django.herokuapp.com/api/${slug}/like/`,\r\n        null,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      fetchData();\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.like_count);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //---------------Publish Post----------------------\r\n  const handlePostMakePublish = async () => {\r\n    try {\r\n      await axios.put(\r\n        `https://fs-blogapp-django.herokuapp.com/api/${slug}/edit/`,\r\n        {\r\n          status: \"published\",\r\n          author_avatar: author,\r\n          content,\r\n          image_URL,\r\n          title,\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      alert(\"Your post is published!\");\r\n      fetchData();\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //--------------Comment Change---------------------\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleCommentSend = async (key) => {\r\n    if (key?.charCode === 13) {\r\n      try {\r\n        await axios.post(\r\n          `https://fs-blogapp-django.herokuapp.com/api/${slug}/comment-create/`,\r\n          { content: comment },\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        setComment(\"\");\r\n        fetchData();\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          console.log(response?.data?.comment_count);\r\n        } else {\r\n          console.log(\"Something went wrong!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommentSendWithClick = async () => {\r\n    try {\r\n      await axios.post(\r\n        `https://fs-blogapp-django.herokuapp.com/api/${slug}/comment-create/`,\r\n        { content: comment },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      setComment(\"\");\r\n      fetchData();\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.comment_count);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const capitalize = (s) => {\r\n    if (typeof s !== \"string\") return \"\";\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const refreshData = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const scrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const goToUserDetailPage = (idOfUser) => {\r\n    history.push(`/user-detail/${idOfUser}`);\r\n  };\r\n\r\n  // -------------RETURN---------------\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image_URL}\r\n            title={title}\r\n          />\r\n          <CardContent>\r\n            <Typography className={classes.title}>{title}</Typography>\r\n            <div\r\n              style={{\r\n                border: \"1px solid #719fb0\",\r\n                display: \"flex\",\r\n                borderRadius: \"10px\",\r\n                justifyContent: \"space-between\",\r\n                marginBottom: \"2rem\",\r\n                padding: \"8px\",\r\n              }}\r\n            >\r\n              <CardActions\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Avatar\r\n                  alt=\"User Avatar\"\r\n                  src={author_avatar}\r\n                  className={classes.small}\r\n                  onClick={() => goToUserDetailPage(author_name)}\r\n                />\r\n                <Typography\r\n                  onClick={() => goToUserDetailPage(author_name)}\r\n                  style={{\r\n                    fontSize: \"18px\",\r\n                    color: \"#079992\",\r\n                    fontWeight: \"bold\",\r\n                    marginLeft: \"1rem\",\r\n                    pointerEvents: \"stroke\",\r\n                  }}\r\n                >\r\n                  {capitalize(author_name)}\r\n                </Typography>\r\n              </CardActions>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"right\",\r\n                    fontSize: \"13px\",\r\n                    color: \"#3c6382\",\r\n                  }}\r\n                >\r\n                  {moment(item?.publish_date).format(\"mm:ss\") ===\r\n                  moment(item?.update_date).format(\"mm:ss\")\r\n                    ? moment(item?.publish_date).format(\"MMM Do YYYY, hh:mm\")\r\n                    : moment(item?.update_date).format(\"MMM Do YYYY, hh:mm\") +\r\n                      \" (edited)\"}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <p className={classes.module}>{content}</p>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <IconButton\r\n            aria-label=\"add to favorites\"\r\n            className={classes.image}\r\n            onClick={handleLikeClick}\r\n          >\r\n            <FavoriteIcon color={is_liked ? \"secondary\" : \"primary\"} />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {like_count}\r\n          </Typography>\r\n          <IconButton aria-label=\"view count\" className={classes.image}>\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {view_count}\r\n          </Typography>\r\n          <IconButton aria-label=\"comment count\" className={classes.image}>\r\n            <ChatBubbleOutlineIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {comment_count}\r\n          </Typography>\r\n        </CardActions>\r\n        <Grid container justify=\"center\">\r\n          <EditComment\r\n            open={editComment}\r\n            setOpen={setEditComment}\r\n            commentContent={editCommentContent}\r\n            changedContent={changedContent}\r\n            setChangedContent={setChangedContent}\r\n            refreshData={refreshData}\r\n            slug={slug}\r\n          />\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <DeleteComment\r\n            open={deleteComment}\r\n            setOpen={setDeleteComment}\r\n            commentContent={editCommentContent}\r\n            refreshData={refreshData}\r\n            slug={slug}\r\n          />\r\n        </Grid>\r\n        <CardContent style={{ pointerEvents: \"all\" }}>\r\n          <Typography\r\n            style={{\r\n              fontSize: \"1.5rem\",\r\n              color: \"#079992\",\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              marginBottom: \"1.5rem\",\r\n            }}\r\n          >\r\n            Comments\r\n          </Typography>\r\n          {/* comment-box---------------------- */}\r\n          {comments?.length\r\n            ? comments\r\n                .sort(\r\n                  ({ id: previousID }, { id: currentID }) =>\r\n                    previousID - currentID\r\n                )\r\n                .map((item) => {\r\n                  return (\r\n                    <div\r\n                      key={item.time_stamp}\r\n                      style={{\r\n                        backgroundColor: \"#ecf0f1\",\r\n                        marginBottom: \"12px\",\r\n                        padding: \"5px\",\r\n                        paddingLeft: \"8px\",\r\n                        borderRadius: \"6px\",\r\n                        display: \"flex\",\r\n                        boxShadow: \"2px 2px 5px #636e72\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          padding: \"6px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-start\",\r\n                          alignItems: \"top\",\r\n                        }}\r\n                      >\r\n                        <Avatar\r\n                          alt=\"Commenter Avatar\"\r\n                          src={item?.commenter_avatar}\r\n                          className={classes.small}\r\n                          onClick={() =>\r\n                            goToUserDetailPage(item?.commenter_name)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          paddingLeft: \"12px\",\r\n                          paddingRight: \"8px\",\r\n                          width: \"100%\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <div>\r\n                            <Typography\r\n                              onClick={() =>\r\n                                goToUserDetailPage(item?.commenter_name)\r\n                              }\r\n                              style={{\r\n                                fontSize: \"14px\",\r\n                                color: \"#079992\",\r\n                                fontWeight: \"bold\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            >\r\n                              {capitalize(item?.commenter_name)}\r\n                            </Typography>\r\n                          </div>\r\n                          {console.log(\"id: \", item.id)}\r\n                          {item.commenter == userId ? (\r\n                            <div>\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                  setEditComment(true);\r\n                                  setEditCommentContent(item);\r\n                                  setChangedContent(item.content);\r\n                                }}\r\n                              >\r\n                                <Edit\r\n                                  style={{\r\n                                    width: \"1.2rem\",\r\n                                    height: \"1.2rem\",\r\n                                    color: \"green\",\r\n                                  }}\r\n                                />\r\n                              </IconButton>\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                style={{ marginLeft: \"1rem\" }}\r\n                                onClick={() => {\r\n                                  setDeleteComment(true);\r\n                                  setEditCommentContent(item);\r\n                                }}\r\n                              >\r\n                                <DeleteForever\r\n                                  style={{\r\n                                    width: \"1.2rem\",\r\n                                    height: \"1.2rem\",\r\n                                    color: \"tomato\",\r\n                                  }}\r\n                                />\r\n                              </IconButton>\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n\r\n                        <Typography\r\n                          style={{\r\n                            fontSize: \"14px\",\r\n                          }}\r\n                        >\r\n                          {item?.content}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            fontSize: \"11px\",\r\n                            color: \"#3c6382\",\r\n                          }}\r\n                        >\r\n                          {moment(item?.time_stamp).format(\"mm:ss\") ===\r\n                          moment(item?.edit_time).format(\"mm:ss\")\r\n                            ? moment(item?.time_stamp).format(\r\n                                \"MMMM Do YYYY, h:mm\"\r\n                              )\r\n                            : moment(item?.edit_time).format(\r\n                                \"MMM Do YYYY, h:mm\"\r\n                              ) + \" (edited)\"}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n            : \"No comments\"}\r\n          <textarea\r\n            ref={commentRef}\r\n            id=\"comment\"\r\n            name=\"comment\"\r\n            label=\"Add a comment\"\r\n            placeholder=\"Share your thoughts...\"\r\n            value={comment}\r\n            onChange={handleCommentChange}\r\n            onKeyPress={handleCommentSend}\r\n            style={{\r\n              backgroundColor: \"#eae3c8\",\r\n              padding: \"8px\",\r\n              paddingLeft: \"15px\",\r\n              width: \"100%\",\r\n              minHeight: \"80px\",\r\n              fontFamily: \"Arial\",\r\n              margin: \"1rem auto\",\r\n              borderRadius: \"10px\",\r\n              fontSize: \"14px\",\r\n              outline: \"none\",\r\n              resize: \"vertical\",\r\n            }}\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              handleCommentSendWithClick();\r\n            }}\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"green\" }}\r\n          >\r\n            <SendIcon style={{ color: \"#fff\" }} />\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n      {/* buttons--------------------- */}\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        m={1}\r\n        p={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        {author == userId && (\r\n          <>\r\n            {author == userId && status == \"draft\" && (\r\n              <>\r\n                <Box p={1}>\r\n                  <button\r\n                    style={squareButtonStyle}\r\n                    onClick={() => handlePostMakePublish()}\r\n                  >\r\n                    <PublishIcon />\r\n                    <br />\r\n                    PUBLISH POST\r\n                  </button>\r\n                </Box>\r\n              </>\r\n            )}\r\n            <Box p={1}>\r\n              <button\r\n                style={{ ...squareButtonStyle, backgroundColor: \"#3c6382\" }}\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: `/edit/${slug}`,\r\n                    state: { postedItem: item },\r\n                  })\r\n                }\r\n              >\r\n                <Edit />\r\n                <br />\r\n                EDIT POST\r\n              </button>\r\n            </Box>\r\n            <Box p={1}>\r\n              <button\r\n                onClick={() => setDeletePost(true)}\r\n                style={{ ...squareButtonStyle, backgroundColor: \"tomato\" }}\r\n              >\r\n                <DeleteForever />\r\n                <br />\r\n                DELETE POST\r\n              </button>\r\n            </Box>\r\n            <DeletePost open={deletePost} setOpen={setDeletePost} slug={slug} />\r\n          </>\r\n        )}\r\n      </Box>\r\n      <div style={{ ...squareButtonsContainerStyle, justifyContent: \"center\" }}>\r\n        <button onClick={() => history.push(\"/home\")} style={wideButtonStyle}>\r\n          Back\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"2.5rem\",\r\n          right: \"1.5rem\",\r\n          borderRadius: \"50%\",\r\n          backgroundColor: \"#99bbad\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          onClick={scrollTop}\r\n          style={{ boxShadow: \"4px 3px 5px grey\" }}\r\n        >\r\n          <ExpandLess\r\n            style={{\r\n              width: \"1.6rem\",\r\n              height: \"1.6rem\",\r\n              color: \"white\",\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Detail;\r\n","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\router\\PrivateRouter.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\PasswordReset.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\PasswordResetConfirm.js",["226"],"import React, { useState, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/navbar/Navbar\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nconst inputStyle = {\r\n  margin: \"2rem auto\",\r\n  width: \"240px\",\r\n  height: \"2.5rem\",\r\n  backgroundColor: \"#ffda79\",\r\n  borderRadius: \"20px\",\r\n  textAlign: \"center\",\r\n  padding: \"0px\",\r\n  outline: \"none\",\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: \"10px\",\r\n  outline: \"none\",\r\n  border: \"0\",\r\n  borderRadius: \"20px\",\r\n  cursor: \"pointer\",\r\n  width: \"10rem\",\r\n  fontSize: \"1rem\",\r\n  fontWeight: \"bold\",\r\n  backgroundColor: \"#83acf1\",\r\n  color: \"#fff\",\r\n  marginTop: \"1.5rem\",\r\n};\r\n//------------Minimodal-----------\r\nfunction MiniModal({ open, setOpen }) {\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const minimodalStyle = {\r\n    width: \"33rem\",\r\n    position: \"absolute\",\r\n    top: \"8rem\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    backgroundColor: \"#eaffd0\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px\",\r\n    borderRadius: \"10px\",\r\n    border: \"1px solid gray\",\r\n    outline: \"none\",\r\n    fontFamily: \"courier\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  };\r\n  const okButton = {\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid tomato\",\r\n    outline: \"none\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const body = (\r\n    <div style={minimodalStyle}>\r\n      <div>\r\n        Password must be at least 6 characters, contain minimum one uppercase,\r\n        one lowercase and one number!\r\n      </div>\r\n      <div>\r\n        <button onClick={handleClose} style={okButton}>\r\n          ✔️\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n//-------------MAIN FUNC------------\r\nexport default function PasswordResetConfirm() {\r\n  let { uidb64, token } = useParams();\r\n  const [returnData, setReturnData] = useState([]);\r\n  const [pass, setPass] = useState({\r\n    password_first: \"\",\r\n    password_second: \"\",\r\n  });\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const inputRef2 = useRef();\r\n  const history = useHistory();\r\n\r\n  const handleChange1 = (e) => {\r\n    setPass((prevState) => ({\r\n      ...prevState,\r\n      password_first: e,\r\n    }));\r\n  };\r\n  const handleChange2 = (e) => {\r\n    setPass((prevState) => ({\r\n      ...prevState,\r\n      password_second: e,\r\n    }));\r\n  };\r\n\r\n  function passwordMatch(txt) {\r\n    if (pass.password_first?.indexOf(txt) == txt?.indexOf(txt)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const regPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/;\r\n\r\n  function passwordCheck(txt) {\r\n    if (\r\n      pass.password_first === pass.password_second &&\r\n      regPassword.test(inputRef2?.current?.value)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const postData = async (values) => {\r\n    if (passwordCheck(values)) {\r\n      try {\r\n        console.log(values);\r\n        const result = await axios.patch(\r\n          \"https://fs-blogapp-django.herokuapp.com/user/reset-password-complete/\",\r\n          { password: values, uidb64: uidb64, token: token }\r\n        );\r\n        console.log(result.data);\r\n        setReturnData(result.data);\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          alert(response?.data.password);\r\n        } else {\r\n          alert(\"Something went wrong!\");\r\n        }\r\n      }\r\n    } else {\r\n      setReturnData(\"Password do not match.\");\r\n    }\r\n  };\r\n\r\n  //-----------------RETURN-------------\r\n  return (\r\n    <div style={{ backgroundColor: \"#f0f0f0\", height: \"100vh\" }}>\r\n      <Navbar />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h2 style={{ margin: \"2rem auto 4.5rem\" }}>Create New Password</h2>\r\n        <MiniModal open={open} setOpen={setOpen} />\r\n\r\n        {!returnData.success ? (\r\n          <>\r\n            <label>Enter your new password</label>\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => handleChange1(e.target.value)}\r\n              style={inputStyle}\r\n            />\r\n            <label>Re-enter your new password</label>\r\n            <input\r\n              type=\"password\"\r\n              ref={inputRef2}\r\n              onChange={(e) => handleChange2(e.target.value)}\r\n              style={\r\n                !passwordMatch(inputRef2?.current?.value) &&\r\n                inputRef2?.current?.value !== undefined\r\n                  ? { ...inputStyle, borderColor: \"red\" }\r\n                  : inputStyle\r\n              }\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                postData(pass.password_second);\r\n              }}\r\n              style={buttonStyle}\r\n              disabled={!passwordCheck(inputRef2?.current?.value)}\r\n            >\r\n              Send\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <p style={{ fontWeight: \"bold\", color: \"#009432\" }}>\r\n              ✅ Password is successfully changed. Now, you can login.\r\n            </p>\r\n            <button onClick={() => history.push(\"/\")} style={buttonStyle}>\r\n              Go to Login Page\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\editProfile\\EditModal.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\editComment\\EditComment.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\AccountSettings.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\userDetail\\userDetail.js",["227"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport PostCard from \"../../components/card/Card\";\r\nimport Stats from \"./userStats\";\r\nimport Chat from \"./Chat\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport { squareButtonStyle } from \"../../styles/smallElements\";\r\nimport { wideButtonStyle } from \"../../styles/smallElements\";\r\n\r\nimport ForumRoundedIcon from \"@material-ui/icons/ForumRounded\";\r\n\r\nimport { LoopCircleLoading } from \"react-loadingg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& > *\": {\r\n      margin: theme.spacing(5),\r\n    },\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  media: {\r\n    height: \"35vh\",\r\n    boxShadow: \"3px 3px 4px #555\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  bioContainer: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    padding: \"0.8rem\",\r\n    lineHeight: \"1.5rem\",\r\n    borderRadius: \"10px\",\r\n    minWidth: \"300px\",\r\n    height: \"200px\",\r\n    overflow: \"scroll\",\r\n    boxShadow: \"3px 3px 4px #555\",\r\n  },\r\n}));\r\n\r\nfunction UserDetail() {\r\n  const [user, setUser] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [statsOpen, setStatsOpen] = useState(false);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n\r\n  const history = useHistory();\r\n  let { username } = useParams();\r\n  const classes = useStyles();\r\n\r\n  const sender = localStorage.getItem(\"username\");\r\n\r\n  // --------fetch user data------------\r\n  const fetchData = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const result = await axios.get(\r\n        `https://fs-blogapp-django.herokuapp.com/user/profile-list/`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token ? \"Token \" + token : null,\r\n          },\r\n        }\r\n      );\r\n      const profile = result.data.filter((item) => item.user === username);\r\n      setUser(profile);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(\"No data\");\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // --------fetch data------------\r\n  const fetchPostData = async (\r\n    postListURL = \"https://fs-blogapp-django.herokuapp.com/api/post-list/\"\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(postListURL);\r\n      const data = result?.data;\r\n      const filtered = data.filter(\r\n        (item) => item.status === \"published\" && item.author_name === username\r\n      );\r\n      setPosts(filtered);\r\n      console.log(filtered);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(\"No data\");\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchPostData();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  //---------------RETURN------------\r\n  return !user?.length ? (\r\n    <div>\r\n      <Navbar />\r\n      <LoopCircleLoading />\r\n    </div>\r\n  ) : (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#f6f5f5\",\r\n        width: \"auto\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <Navbar />\r\n      <Grid container className={classes.root} spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid container justify=\"center\" style={{ marginBottom: \"0.8rem\" }}>\r\n              <h2 style={{ margin: \"2rem auto\" }}>\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {user[0].user}\r\n                </span>\r\n              </h2>\r\n            </Grid>\r\n            <Grid container justify=\"center\" style={{ marginBottom: \"0.8rem\" }}>\r\n              <img\r\n                src={user[0].image}\r\n                alt=\"ProfilePicture\"\r\n                className={classes.media}\r\n              />\r\n              <button\r\n                style={{\r\n                  ...squareButtonStyle,\r\n                  width: \"4rem\",\r\n                  marginLeft: \"1rem\",\r\n                }}\r\n                onClick={() => setStatsOpen(true)}\r\n              >\r\n                <EqualizerIcon fontSize=\"small\" />\r\n                <br /> STATS\r\n              </button>\r\n              <Stats\r\n                username={username}\r\n                open={statsOpen}\r\n                setOpen={setStatsOpen}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              xs={6}\r\n              justify=\"center\"\r\n              className={classes.bioContainer}\r\n            >\r\n              <p\r\n                style={{\r\n                  textIndent: \"30px\",\r\n                  alignSelf: \"stretch\",\r\n                  textAlign: \"justify\",\r\n                }}\r\n              >\r\n                {user[0].bio}\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n          {sender === user[0].user ? null : (\r\n            <>\r\n              <ForumRoundedIcon\r\n                onClick={() => setChatOpen(true)}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"30%\",\r\n                  right: \"20%\",\r\n                  fontSize: 100,\r\n                  color: \"grey\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n              <Chat\r\n                open={chatOpen}\r\n                setOpen={setChatOpen}\r\n                sender={sender}\r\n                receiver={user[0].user}\r\n              />\r\n            </>\r\n          )}\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            spacing={5}\r\n            style={{ marginTop: \"2rem\" }}\r\n          >\r\n            <Grid container justify=\"center\" spacing={5}>\r\n              <Grid container justify=\"center\" style={{ margin: \"2rem auto\" }}>\r\n                <h2 style={{ textTransform: \"capitalize\" }}>\r\n                  {username}'s posts\r\n                </h2>\r\n              </Grid>\r\n\r\n              {posts.length ? (\r\n                posts.map((item, idx) => {\r\n                  return <PostCard item={item} itemStatus={false} id={idx} />;\r\n                })\r\n              ) : loading ? (\r\n                <div style={{ position: \"relative\" }}>\r\n                  <LoopCircleLoading />\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\r\n                    \"{username}\" has no article yet.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Box p={9}>\r\n              <button onClick={() => history.goBack()} style={wideButtonStyle}>\r\n                Back\r\n              </button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDetail;\r\n","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\userDetail\\userStats.js",["228","229","230","231"],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\userDetail\\Chat.js",["232","233","234"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport moment from \"moment\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\r\n\r\nimport WebSocketInstance from \"../../services/WebSocket\";\r\n\r\n//-------------MAIN FUNC------------\r\nexport default function Chat({ open, setOpen, sender, receiver }) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [newMessage, setNewMessage] = useState([]);\r\n\r\n  //---------------WebSocket---------------------\r\n  const [messages, setMessages] = useState([]);\r\n  const [sanitizedMessageList, setSanitizedMessageList] = useState([]);\r\n\r\n  const messageRef = useRef();\r\n\r\n  //----------------Web Socket Logic-------------------------\r\n\r\n  const callback = () => {\r\n    WebSocketInstance.initChatUser(sender);\r\n    WebSocketInstance.addCallbacks(setMess, addMessage);\r\n    WebSocketInstance.fetchMessages(sender);\r\n  }\r\n\r\n  function waitForSocketConnection() {\r\n    setTimeout(\r\n      function () {\r\n        // Check if websocket state is OPEN\r\n        if (WebSocketInstance.state() === 1) {\r\n          console.log(\"Connection is made\")\r\n          callback();\r\n          return;\r\n        } else {\r\n          console.log(\"wait for connection...\");\r\n          waitForSocketConnection();\r\n        }\r\n    }, 100); // wait 100 milisecond for the connection...\r\n  }\r\n\r\n  function addMessage(message) {\r\n    setMessages([...messages, message]);\r\n    setNewMessage(message);\r\n  }\r\n\r\n  function setMess(messages) {\r\n    setMessages(messages.reverse());\r\n  }\r\n\r\n  const sendMessageHandler = () => {\r\n    const messageObject = {\r\n      from: sender,\r\n      text: text,\r\n    };\r\n    WebSocketInstance.newChatMessage(messageObject);\r\n    setText(\"\");\r\n  };\r\n\r\n  //----------------Filter Message List-------------------\r\n  const filteredMessageList = () => {\r\n    const newList = messages.filter((item) => item.author === sender || item.author === receiver)\r\n    setSanitizedMessageList(newList);\r\n  }\r\n\r\n  //----------------Text Set Function---------------------\r\n  const handleMessageChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  //-----------------Capitalize------------------------------\r\n  const capitalize = (s) => {\r\n    if (typeof s !== \"string\") return \"\";\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  };\r\n\r\n  //---------------Keep Scroll at the Bottom------------------\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    console.log(sanitizedMessageList);\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    waitForSocketConnection();\r\n    filteredMessageList();\r\n  }, [newMessage]);\r\n\r\n  useEffect(() => {\r\n    const main = async () => {\r\n      await WebSocketInstance.connect();\r\n    }\r\n    main();\r\n    waitForSocketConnection();\r\n    filteredMessageList();\r\n  }, [open]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        width: \"30%\",\r\n        minWidth: \"300px\",\r\n        alignContent: \"center\",\r\n        height: \"80vh\",\r\n        border: \"solid\",\r\n        top: \"15%\",\r\n        right: \"5%\",\r\n        backgroundColor: \"aqua\",\r\n        padding: \"1rem\",\r\n        borderRadius: \"20px\",\r\n      }}\r\n    >\r\n      <div style={{ height: \"70%\", overflow: \"auto\" }}>\r\n        {sanitizedMessageList?.length\r\n          ? sanitizedMessageList\r\n              .map((item) => {\r\n                return (\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                      }}\r\n                    >\r\n                      <Avatar alt=\"Commenter Avatar\" src={null} />\r\n                      <div>\r\n                        <Typography\r\n                          style={{\r\n                            fontSize: \"14px\",\r\n                            color: \"black\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          {capitalize(item?.author)}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <Typography\r\n                        style={{\r\n                          fontSize: \"12px\",\r\n                          color: \"black\",\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        {item?.content}\r\n                      </Typography>\r\n                      <Typography\r\n                        style={{\r\n                          textAlign: \"right\",\r\n                          fontSize: \"11px\",\r\n                          color: \"#3c6382\",\r\n                        }}\r\n                      >\r\n                        {moment(item?.created_at).format(\"MMMM Do YYYY, h:mm\")}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n          : null}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <Typography\r\n        style={{\r\n          fontSize: \"14px\",\r\n          position: \"absolute\",\r\n          bottom: \"5%\",\r\n          left: \"5%\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <textarea\r\n          ref={messageRef}\r\n          id=\"message\"\r\n          name=\"message\"\r\n          label=\"Send message\"\r\n          placeholder=\"Type something...\"\r\n          onChange={handleMessageChange}\r\n          style={{\r\n            backgroundColor: \"#eae3c8\",\r\n            padding: \"8px\",\r\n            paddingLeft: \"15px\",\r\n            width: \"90%\",\r\n            minHeight: \"5rem\",\r\n            fontFamily: \"Arial\",\r\n            margin: \"1rem auto\",\r\n            borderRadius: \"10px\",\r\n            fontSize: \"14px\",\r\n            outline: \"none\",\r\n            resize: \"vertical\",\r\n          }}\r\n        />\r\n      </Typography>\r\n      <div className=\"buttonContainer\" style={{ height: \"1rem\" }}>\r\n        <SendRoundedIcon\r\n          onClick={() => {\r\n            sendMessageHandler();\r\n            messageRef.current.value = \"\";\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"10%\",\r\n            right: \"5%\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n        <CancelRoundedIcon\r\n          onClick={handleClose}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"5%\",\r\n            right: \"2%\",\r\n            fill: \"red\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        hideBackdrop={true}\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\config\\index.js",["235"],"const API_PATH = 'ws://fs-blogapp-django.herokuapp.com/ws/chat/';\r\n\r\nexport default {\r\n  API_PATH\r\n};","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\services\\WebSocket.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\PostEdit.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\DeleteAccount.js",["236","237","238"],"import React, { useContext, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport axios from \"axios\";\r\nimport { statsModalContainer } from \"../styles/modals\";\r\nimport { iconContainerStyle } from \"../styles/signInUp\";\r\nimport { iconStyle } from \"../styles/signInUp\";\r\nimport { inputStyle } from \"../styles/signInUp\";\r\nimport { buttonStyle } from \"../styles/signInUp\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport { Context } from \"../context/Context\";\r\n\r\n//-------------MAIN FUNC------------\r\nexport default function DeleteAccount({ open, setOpen }) {\r\n  const [returnData, setReturnData] = useState([]);\r\n  const { setToken, setUserId } = useContext(Context);\r\n  const history = useHistory();\r\n  const inputRef = useRef();\r\n\r\n  const handleAccountDelete = async () => {\r\n    try {\r\n      console.log(inputRef?.current?.value);\r\n      console.log(localStorage.getItem(\"token\"));\r\n      const result = await axios.post(\r\n        `https://fs-blogapp-django.herokuapp.com/user/edit/`,\r\n        { password: inputRef?.current?.value },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      setReturnData(result);\r\n      console.log(result);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        alert(\r\n          response?.status == 404 || response?.status == 400\r\n            ? \"Please enter valid password!\"\r\n            : response?.data?.message\r\n        );\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div\r\n      style={{\r\n        ...statsModalContainer,\r\n        minHeight: \"14rem\",\r\n        height: \"14rem\",\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          color: \"tomato\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        😮 Sure to delete account?\r\n        <br /> All your posts will be deleted as well!\r\n      </p>\r\n\r\n      <div style={iconContainerStyle}>\r\n        <div style={iconStyle}>\r\n          <LockIcon fontSize=\"small\" />\r\n        </div>\r\n\r\n        <input\r\n          style={inputStyle}\r\n          ref={inputRef}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          height: \"5rem\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{ ...buttonStyle, width: \"8rem\" }}\r\n          onClick={handleAccountDelete}\r\n        >\r\n          Yes\r\n        </button>\r\n        <button\r\n          style={{\r\n            ...buttonStyle,\r\n            width: \"8rem\",\r\n            marginLeft: \"12px\",\r\n            backgroundColor: \"hsl(34, 80%, 73%)\",\r\n          }}\r\n          onClick={() => setOpen(false)}\r\n        >\r\n          No\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //-------Confirmed-------------\r\n  const confirmed = (\r\n    <div\r\n      style={{\r\n        ...statsModalContainer,\r\n        minHeight: \"9rem\",\r\n        height: \"9rem\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          color: \"tomato\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        Your account is permanently deleted 😔\r\n      </p>\r\n\r\n      <button\r\n        style={{ ...buttonStyle, width: \"8rem\", alignSelf: \"center\" }}\r\n        onClick={() => {\r\n          handleClose();\r\n          setToken(null);\r\n          setUserId(null);\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.removeItem(\"userId\");\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        Ok\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {returnData.status == 204 ? confirmed : body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\smallElements.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\titles.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\DeletePost.js",["239"],"import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { statsModalContainer } from \"../styles/modals\";\r\nimport { buttonStyle } from \"../styles/signInUp\";\r\n\r\n//-------------MAIN FUNC------------\r\nexport default function DeletePost({ open, setOpen, slug }) {\r\n  const history = useHistory();\r\n  const handlePostDelete = async () => {\r\n    try {\r\n      const result = await axios.delete(\r\n        `https://fs-blogapp-django.herokuapp.com/api/${slug}/edit/`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      setOpen(false);\r\n      alert(\"Post deleted successfully.\");\r\n      history.push(\"/profile\");\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div\r\n      style={{\r\n        ...statsModalContainer,\r\n        minHeight: \"9rem\",\r\n        height: \"9rem\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          color: \"tomato\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        Are you sure to delete the post?\r\n      </p>\r\n\r\n      <div className=\"buttonContainer\">\r\n        <button\r\n          style={{ ...buttonStyle, width: \"6rem\", alignSelf: \"center\" }}\r\n          onClick={handlePostDelete}\r\n        >\r\n          Yes\r\n        </button>\r\n        <button\r\n          style={{\r\n            ...buttonStyle,\r\n            width: \"6rem\",\r\n            alignSelf: \"center\",\r\n            marginLeft: \"1rem\",\r\n            backgroundColor: \"hsl(34, 80%, 73%)\",\r\n          }}\r\n          onClick={() => setOpen(false)}\r\n        >\r\n          <p style={{ fontSize: \"10px\" }}>No</p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\modals.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\ChangeCredentials.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\pages\\CreatePost.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\styles\\signInUp.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\DeleteComment.js",[],"C:\\Users\\Aksu\\Desktop\\Clarusway_Projects\\Fullstack-BlogApp-Django-React\\blog-app\\src\\components\\ChangePassword.js",["240","241","242"],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"243","replacedBy":"247"},{"ruleId":"245","replacedBy":"248"},{"ruleId":"243","replacedBy":"249"},{"ruleId":"245","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":168,"column":6,"nodeType":"253","endLine":168,"endColumn":32,"suggestions":"254"},{"ruleId":"251","severity":1,"message":"255","line":173,"column":6,"nodeType":"253","endLine":173,"endColumn":36,"suggestions":"256"},{"ruleId":"251","severity":1,"message":"257","line":177,"column":6,"nodeType":"253","endLine":177,"endColumn":46,"suggestions":"258"},{"ruleId":"251","severity":1,"message":"259","line":183,"column":6,"nodeType":"253","endLine":183,"endColumn":22,"suggestions":"260"},{"ruleId":"251","severity":1,"message":"261","line":98,"column":6,"nodeType":"253","endLine":98,"endColumn":8,"suggestions":"262"},{"ruleId":"243","replacedBy":"263"},{"ruleId":"245","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":145,"column":19,"nodeType":"267","messageId":"268","endLine":145,"endColumn":21},{"ruleId":"265","severity":1,"message":"266","line":145,"column":49,"nodeType":"267","messageId":"268","endLine":145,"endColumn":51},{"ruleId":"243","replacedBy":"269"},{"ruleId":"245","replacedBy":"270"},{"ruleId":"251","severity":1,"message":"271","line":46,"column":6,"nodeType":"253","endLine":46,"endColumn":18,"suggestions":"272"},{"ruleId":"265","severity":1,"message":"266","line":48,"column":26,"nodeType":"267","messageId":"268","endLine":48,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":60,"column":26,"nodeType":"267","messageId":"268","endLine":60,"endColumn":28},{"ruleId":"251","severity":1,"message":"273","line":145,"column":6,"nodeType":"253","endLine":145,"endColumn":16,"suggestions":"274"},{"ruleId":"251","severity":1,"message":"275","line":149,"column":6,"nodeType":"253","endLine":149,"endColumn":20,"suggestions":"276"},{"ruleId":"265","severity":1,"message":"266","line":86,"column":26,"nodeType":"267","messageId":"268","endLine":86,"endColumn":28},{"ruleId":"277","severity":1,"message":"278","line":96,"column":34,"nodeType":"279","messageId":"280","endLine":96,"endColumn":36},{"ruleId":"265","severity":1,"message":"266","line":97,"column":25,"nodeType":"267","messageId":"268","endLine":97,"endColumn":27},{"ruleId":"251","severity":1,"message":"273","line":117,"column":6,"nodeType":"253","endLine":117,"endColumn":16,"suggestions":"281"},{"ruleId":"251","severity":1,"message":"282","line":121,"column":6,"nodeType":"253","endLine":121,"endColumn":20,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":74,"column":19,"nodeType":"286","messageId":"287","endLine":74,"endColumn":28},{"ruleId":"284","severity":1,"message":"288","line":114,"column":5,"nodeType":"286","messageId":"287","endLine":114,"endColumn":13},{"ruleId":"284","severity":1,"message":"289","line":115,"column":5,"nodeType":"286","messageId":"287","endLine":115,"endColumn":17},{"ruleId":"284","severity":1,"message":"290","line":116,"column":5,"nodeType":"286","messageId":"287","endLine":116,"endColumn":16},{"ruleId":"251","severity":1,"message":"291","line":244,"column":6,"nodeType":"253","endLine":244,"endColumn":8,"suggestions":"292"},{"ruleId":"265","severity":1,"message":"266","line":453,"column":43,"nodeType":"267","messageId":"268","endLine":453,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":561,"column":17,"nodeType":"267","messageId":"268","endLine":561,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":563,"column":21,"nodeType":"267","messageId":"268","endLine":563,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":563,"column":41,"nodeType":"267","messageId":"268","endLine":563,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":117,"column":43,"nodeType":"267","messageId":"268","endLine":117,"endColumn":45},{"ruleId":"251","severity":1,"message":"293","line":118,"column":6,"nodeType":"253","endLine":118,"endColumn":8,"suggestions":"294"},{"ruleId":"265","severity":1,"message":"266","line":48,"column":31,"nodeType":"267","messageId":"268","endLine":48,"endColumn":33},{"ruleId":"265","severity":1,"message":"266","line":60,"column":26,"nodeType":"267","messageId":"268","endLine":60,"endColumn":28},{"ruleId":"251","severity":1,"message":"273","line":142,"column":6,"nodeType":"253","endLine":142,"endColumn":16,"suggestions":"295"},{"ruleId":"251","severity":1,"message":"275","line":146,"column":6,"nodeType":"253","endLine":146,"endColumn":20,"suggestions":"296"},{"ruleId":"251","severity":1,"message":"297","line":92,"column":6,"nodeType":"253","endLine":92,"endColumn":16,"suggestions":"298"},{"ruleId":"251","severity":1,"message":"299","line":97,"column":6,"nodeType":"253","endLine":97,"endColumn":18,"suggestions":"300"},{"ruleId":"251","severity":1,"message":"299","line":106,"column":6,"nodeType":"253","endLine":106,"endColumn":12,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":3,"column":1,"nodeType":"304","endLine":5,"endColumn":3},{"ruleId":"265","severity":1,"message":"266","line":41,"column":28,"nodeType":"267","messageId":"268","endLine":41,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":41,"column":55,"nodeType":"267","messageId":"268","endLine":41,"endColumn":57},{"ruleId":"265","severity":1,"message":"266","line":164,"column":28,"nodeType":"267","messageId":"268","endLine":164,"endColumn":30},{"ruleId":"284","severity":1,"message":"305","line":13,"column":13,"nodeType":"286","messageId":"287","endLine":13,"endColumn":19},{"ruleId":"284","severity":1,"message":"306","line":11,"column":10,"nodeType":"286","messageId":"287","endLine":11,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":72,"column":43,"nodeType":"267","messageId":"268","endLine":72,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":216,"column":26,"nodeType":"267","messageId":"268","endLine":216,"endColumn":28},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],["307"],["308"],["307"],["308"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filteredDataFunc'. Either include it or remove the dependency array.","ArrayExpression",["309"],"React Hook useEffect has missing dependencies: 'categoryFilterData' and 'categoryFilterFunc'. Either include them or remove the dependency array.",["310"],"React Hook useEffect has a missing dependency: 'paginationFunc'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'categoryDisplay' and 'setSelectedOption'. Either include them or remove the dependency array.",["312"],"React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["313"],["307"],["308"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["307"],["308"],"React Hook useEffect has a missing dependency: 'setCategoryDisplay'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'filteredPosts'. Either include it or remove the dependency array.",["315"],"React Hook useEffect has a missing dependency: 'logicalOperations'. Either include it or remove the dependency array.",["316"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["317"],"React Hook useEffect has a missing dependency: 'separateOperation'. Either include it or remove the dependency array.",["318"],"no-unused-vars","'setUserId' is assigned a value but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","'publish_date' is assigned a value but never used.","'update_date' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'fetchData' and 'fetchPostData'. Either include them or remove the dependency array.",["320"],["321"],["322"],"React Hook useEffect has a missing dependency: 'sanitizedMessageList'. Either include it or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'filteredMessageList' and 'waitForSocketConnection'. Either include them or remove the dependency array.",["324"],["325"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'result' is assigned a value but never used.","'labelStyle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"338","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"338","fix":"349"},{"desc":"340","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [filteredDataFunc, keyword, postDisplayList]",{"range":"357","text":"358"},"Update the dependencies array to be: [categoryFilterData, categoryFilterFunc, filteredData, selectedOption]",{"range":"359","text":"360"},"Update the dependencies array to be: [sanitizedData, offset, postDisplayList, paginationFunc]",{"range":"361","text":"362"},"Update the dependencies array to be: [categoryDisplay, selectedOption, setSelectedOption]",{"range":"363","text":"364"},"Update the dependencies array to be: [fetchUserProfile]",{"range":"365","text":"366"},"Update the dependencies array to be: [categories, setCategoryDisplay]",{"range":"367","text":"368"},"Update the dependencies array to be: [filteredPosts, postList]",{"range":"369","text":"370"},"Update the dependencies array to be: [filteredList, logicalOperations]",{"range":"371","text":"372"},{"range":"373","text":"370"},"Update the dependencies array to be: [filteredList, separateOperation]",{"range":"374","text":"375"},"Update the dependencies array to be: [fetchData]",{"range":"376","text":"377"},"Update the dependencies array to be: [fetchData, fetchPostData]",{"range":"378","text":"379"},{"range":"380","text":"370"},{"range":"381","text":"372"},"Update the dependencies array to be: [messages, sanitizedMessageList]",{"range":"382","text":"383"},"Update the dependencies array to be: [filteredMessageList, newMessage, waitForSocketConnection]",{"range":"384","text":"385"},"Update the dependencies array to be: [filteredMessageList, open, waitForSocketConnection]",{"range":"386","text":"387"},[4371,4397],"[filteredDataFunc, keyword, postDisplayList]",[4499,4529],"[categoryFilterData, categoryFilterFunc, filteredData, selectedOption]",[4584,4624],"[sanitizedData, offset, postDisplayList, paginationFunc]",[4761,4777],"[categoryDisplay, selectedOption, setSelectedOption]",[2649,2651],"[fetchUserProfile]",[1209,1221],"[categories, setCategoryDisplay]",[3895,3905],"[filteredPosts, postList]",[3963,3977],"[filteredList, logicalOperations]",[2971,2981],[3039,3053],"[filteredList, separateOperation]",[7189,7191],"[fetchData]",[3292,3294],"[fetchData, fetchPostData]",[3876,3886],[3944,3958],[2809,2819],"[messages, sanitizedMessageList]",[2911,2923],"[filteredMessageList, newMessage, waitForSocketConnection]",[3109,3115],"[filteredMessageList, open, waitForSocketConnection]"]